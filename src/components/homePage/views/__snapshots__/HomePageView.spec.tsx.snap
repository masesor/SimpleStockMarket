// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    classes={
        Object {
            "button": Object {
              "marginBottom": 15,
            },
            "mobileRoot": Object {
              "paddingLeft": 15,
              "paddingRight": 15,
              "paddingTop": 50,
            },
            "root": Object {
              "padding": 10,
            },
          }
    }
    toggleNewTradeFormDialog={[Function]}
    width={undefined}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "alignItems": "flex-start",
      "children": Array [
        <WithRoot />,
        <WithStyles(Grid)
          item={true}
          xs={12}
>
          <WithStyles(Button)
                    className={
                              Object {
                                        "marginBottom": 15,
                                      }
                    }
                    color="secondary"
                    onClick={[Function]}
                    variant="contained"
          >
                    Book Trade
          </WithStyles(Button)>
</WithStyles(Grid)>,
        <WithStyles(Grid)
          item={true}
          xs={12}
>
          <WithRoot />
</WithStyles(Grid)>,
        <WithStyles(Grid)
          item={true}
          xs={12}
>
          <WithRoot />
</WithStyles(Grid)>,
      ],
      "className": Object {
        "paddingLeft": 15,
        "paddingRight": 15,
        "paddingTop": 50,
      },
      "container": true,
      "justify": "flex-start",
      "spacing": 40,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(Button)
            className={
                        Object {
                                    "marginBottom": 15,
                                  }
            }
            color="secondary"
            onClick={[Function]}
            variant="contained"
>
            Book Trade
</WithStyles(Button)>,
          "item": true,
          "xs": 12,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Book Trade",
            "className": Object {
              "marginBottom": 15,
            },
            "color": "secondary",
            "onClick": [Function],
            "variant": "contained",
          },
          "ref": null,
          "rendered": "Book Trade",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithRoot />,
          "item": true,
          "xs": 12,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithRoot />,
          "item": true,
          "xs": 12,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "alignItems": "flex-start",
        "children": Array [
          <WithRoot />,
          <WithStyles(Grid)
            item={true}
            xs={12}
>
            <WithStyles(Button)
                        className={
                                    Object {
                                                "marginBottom": 15,
                                              }
                        }
                        color="secondary"
                        onClick={[Function]}
                        variant="contained"
            >
                        Book Trade
            </WithStyles(Button)>
</WithStyles(Grid)>,
          <WithStyles(Grid)
            item={true}
            xs={12}
>
            <WithRoot />
</WithStyles(Grid)>,
          <WithStyles(Grid)
            item={true}
            xs={12}
>
            <WithRoot />
</WithStyles(Grid)>,
        ],
        "className": Object {
          "paddingLeft": 15,
          "paddingRight": 15,
          "paddingTop": 50,
        },
        "container": true,
        "justify": "flex-start",
        "spacing": 40,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Button)
              className={
                            Object {
                                          "marginBottom": 15,
                                        }
              }
              color="secondary"
              onClick={[Function]}
              variant="contained"
>
              Book Trade
</WithStyles(Button)>,
            "item": true,
            "xs": 12,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Book Trade",
              "className": Object {
                "marginBottom": 15,
              },
              "color": "secondary",
              "onClick": [Function],
              "variant": "contained",
            },
            "ref": null,
            "rendered": "Book Trade",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithRoot />,
            "item": true,
            "xs": 12,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithRoot />,
            "item": true,
            "xs": 12,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`<HomePageView /> renders the component as expected 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Unknown
    classes={
        Object {
            "button": Object {
              "marginBottom": 15,
            },
            "mobileRoot": Object {
              "paddingLeft": 15,
              "paddingRight": 15,
              "paddingTop": 50,
            },
            "root": Object {
              "padding": 10,
            },
          }
    }
    toggleNewTradeFormDialog={[Function]}
    width={undefined}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "alignItems": "flex-start",
      "children": Array [
        <WithRoot />,
        <WithStyles(Grid)
          item={true}
          xs={12}
>
          <WithStyles(Button)
                    className={
                              Object {
                                        "marginBottom": 15,
                                      }
                    }
                    color="secondary"
                    onClick={[Function]}
                    variant="contained"
          >
                    Book Trade
          </WithStyles(Button)>
</WithStyles(Grid)>,
        <WithStyles(Grid)
          item={true}
          xs={12}
>
          <WithRoot />
</WithStyles(Grid)>,
        <WithStyles(Grid)
          item={true}
          xs={12}
>
          <WithRoot />
</WithStyles(Grid)>,
      ],
      "className": Object {
        "paddingLeft": 15,
        "paddingRight": 15,
        "paddingTop": 50,
      },
      "container": true,
      "justify": "flex-start",
      "spacing": 40,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithStyles(Button)
            className={
                        Object {
                                    "marginBottom": 15,
                                  }
            }
            color="secondary"
            onClick={[Function]}
            variant="contained"
>
            Book Trade
</WithStyles(Button)>,
          "item": true,
          "xs": 12,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Book Trade",
            "className": Object {
              "marginBottom": 15,
            },
            "color": "secondary",
            "onClick": [Function],
            "variant": "contained",
          },
          "ref": null,
          "rendered": "Book Trade",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithRoot />,
          "item": true,
          "xs": 12,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <WithRoot />,
          "item": true,
          "xs": 12,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "alignItems": "flex-start",
        "children": Array [
          <WithRoot />,
          <WithStyles(Grid)
            item={true}
            xs={12}
>
            <WithStyles(Button)
                        className={
                                    Object {
                                                "marginBottom": 15,
                                              }
                        }
                        color="secondary"
                        onClick={[Function]}
                        variant="contained"
            >
                        Book Trade
            </WithStyles(Button)>
</WithStyles(Grid)>,
          <WithStyles(Grid)
            item={true}
            xs={12}
>
            <WithRoot />
</WithStyles(Grid)>,
          <WithStyles(Grid)
            item={true}
            xs={12}
>
            <WithRoot />
</WithStyles(Grid)>,
        ],
        "className": Object {
          "paddingLeft": 15,
          "paddingRight": 15,
          "paddingTop": 50,
        },
        "container": true,
        "justify": "flex-start",
        "spacing": 40,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithStyles(Button)
              className={
                            Object {
                                          "marginBottom": 15,
                                        }
              }
              color="secondary"
              onClick={[Function]}
              variant="contained"
>
              Book Trade
</WithStyles(Button)>,
            "item": true,
            "xs": 12,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Book Trade",
              "className": Object {
                "marginBottom": 15,
              },
              "color": "secondary",
              "onClick": [Function],
              "variant": "contained",
            },
            "ref": null,
            "rendered": "Book Trade",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithRoot />,
            "item": true,
            "xs": 12,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <WithRoot />,
            "item": true,
            "xs": 12,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
